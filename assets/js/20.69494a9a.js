(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{60:function(t,i,n){"use strict";n.r(i);var a=n(0),s=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,i=t.$createElement,n=t._self._c||i;return n("div",{staticClass:"content"},[n("h3",{attrs:{id:"过度受限计算规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#过度受限计算规则","aria-hidden":"true"}},[t._v("#")]),t._v(" 过度受限计算规则")]),n("pre",{pre:!0,attrs:{class:"language-css"}},[n("code",[n("span",{attrs:{class:"token selector"}},[t._v(".selector")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token property"}},[t._v("position")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{attrs:{class:"token property"}},[t._v("top")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //值为任意数值或百分数\n  "),n("span",{attrs:{class:"token property"}},[t._v("bottom")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //值为任意数值或百分数\n  "),n("span",{attrs:{class:"token property"}},[t._v("height")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //值为任意数值或百分数\n  "),n("span",{attrs:{class:"token property"}},[t._v("margin")]),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),n("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //值必须为auto才能触发margin重计算\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),n("ul",[n("li",[t._v("以上 Css 属性组合使用时(过度受限)有如下结果：\n"),n("ul",[n("li",[t._v("margin-top = margin-bottom;")]),n("li",[t._v("margin-top/margin-bottom 值计算公式: (包含块 height - height - top - bottom) / 2;")]),n("li",[t._v("距离顶边界偏移量计算公式: (包含块 height - height + top - bottom) / 2;")])])])]),n("h3",{attrs:{id:"display-position-float-彼此的交互作用规则"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#display-position-float-彼此的交互作用规则","aria-hidden":"true"}},[t._v("#")]),t._v(" display & position & float 彼此的交互作用规则")]),n("ul",[n("li",[t._v("如果 display 的值为 none，position 和 float 无效。此时不生成 box。")]),n("li",[t._v("如果 position 的值不为 static 或 relative，box 被绝对定位，float 的计算值为 none，display 的计算值设定规则如下：\n"),n("ul",[n("li",[t._v("当 display: inline-table 时，display 的计算值为 table；")]),n("li",[t._v("当 display: inline | inline-block | run-in | table-* 系时，display 的计算值为 block；")]),n("li",[t._v("当 display: inline-flex 时，display 的计算值为 flex；")]),n("li",[t._v("其它情况为指定值；")])])]),n("li",[t._v("如果 float 的值不是 none，box 是浮动的，display 的计算值设定规则如上。")]),n("li",[t._v("如果元素为根元素，display 的计算值设定规则如上。")]),n("li",[t._v("其余情况下 display 的值就是其指定值。")])]),n("p",[n("strong",[n("em",[t._v("总结：绝对定位元素、浮动元素和根元素的 display 属性会被块级化。")])])]),n("h3",{attrs:{id:"盒子模型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#盒子模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 盒子模型")]),n("ul",[n("li",[t._v("盒子模型由外到内结构：position-box > margin-box > border-box > scroll-box[scrollbar(右+下) + client-box(即 padding-box)] > padding-box > content-box")]),n("li",[t._v("盒模型 width/height 使用值计算公式如下：\n"),n("ul",[n("li",[t._v("box-sizing: border-box 时：\n"),n("ul",[n("li",[t._v("style.width = borderBoxWidth")]),n("li",[t._v("style.height = borderBoxHeight")])])]),n("li",[t._v("box-sizing: content-box 时：\n"),n("ul",[n("li",[t._v("style.width = contentBoxWidth + scrollbarWidth")]),n("li",[t._v("style.height = contentBoxHeight + scrollbarHeight")])])]),n("li",[t._v("offsetWidth = borderBoxWidth = clientWidth + scrollbarWidth + style.borderLeft + style.borderRight")]),n("li",[t._v("offsetHeight = borderBoxHeight = clientHeight + scrollbarHeight + style.borderTop + style.borderBottom")]),n("li",[t._v("clientWidth = paddingBoxWidth = contentBoxWidth + style.paddingLeft + style.paddingRight")]),n("li",[t._v("clientHeight = paddingBoxHeight = contentBoxHeight + style.paddingTop + style.paddingBottom")])])])]),n("h3",{attrs:{id:"置换元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#置换元素","aria-hidden":"true"}},[t._v("#")]),t._v(" 置换元素")]),n("ul",[n("li",[t._v("置换元素本质上只是一个占位符，是一个 inline 元素，和普通 inline 元素的区别在于其置换后的内容有默认宽高，设置 width/heigth 时，设置的是其置换后内容的 width/height。")]),n("li",[t._v("个人推测：inline 置换元素会自动将 display: inline 转换成 display: inline-block 显示，所以拥有和 inline-block 元素类似的显示特点。")]),n("li",[t._v("推测依据：\n"),n("ul",[n("li",[n("code",[t._v("<img>")]),n("code",[t._v("<textarea>")]),t._v(" 元素设置成 display: inline，仍可以设置 width/height，并且 margin 不会折叠，说明有生成新的 BFC，和 inline-block 元素特点一致。")]),n("li",[n("code",[t._v("<img>")]),n("code",[t._v("<textarea>")]),t._v(" 元素设置成 display: block，margin 会发生折叠，说明 block 置换元素不会生成新的 BFC，失去了 inline-block 元素的特点。")])])]),n("li",[t._v("所以个人推测：行内置换元素的特点是通过 display: inline-block 来实现的。")]),n("li",[t._v("另一种可能：置换元素本质上只是一个占位符，所以本质就是一个 inline 元素，所以只有设置为 display: inline 时才有其特点。")])])])}],!1,null,null,null);i.default=s.exports}}]);