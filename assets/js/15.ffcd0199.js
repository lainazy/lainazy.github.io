(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{65:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"gitlab-ci-使用摘要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci-使用摘要","aria-hidden":"true"}},[t._v("#")]),t._v(" Gitlab CI 使用摘要")]),s("p",[s("a",{attrs:{href:"https://docs.gitlab.com/ee/ci",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab Continuous Integration (GitLab CI/CD)")])]),s("p",[t._v("使用 Gitlab 托管代码时，最简单的持续集成方式。")]),s("h2",{attrs:{id:"gitlab-runner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner","aria-hidden":"true"}},[t._v("#")]),t._v(" Gitlab Runner")]),s("p",[s("a",{attrs:{href:"https://docs.gitlab.com/runner/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab Runner Install & Register")])]),s("h3",{attrs:{id:"install-as-a-docker-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-as-a-docker-service","aria-hidden":"true"}},[t._v("#")]),t._v(" Install as a Docker service")]),s("p",[s("a",{attrs:{href:"https://docs.gitlab.com/runner/install/docker.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Run GitLab Runner in a container")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# alpine 版本的体积\b小")]),t._v("\ndocker pull gitlab/gitlab-runner:alpine\n")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# docker run <image>: 当本地 \bdocker 中该镜像不存在时会自动 pull 镜像")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# -d: 表示在后台运行")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# --name: 给 docker 容器命名")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# --restart: 将 runner 的自动重启和 docker 绑定")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# -v: 将主机中的路径与 \bdocker 容器中的路径关联(映射)")]),t._v("\ndocker run -d --name gitlab-runner --restart always \\\n  -v /Users/shared/gitlab-runner/config:/etc/gitlab-runner \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  gitlab/gitlab-runner:alpine\n")])]),s("h3",{attrs:{id:"register-a-gitlab-runner"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-a-gitlab-runner","aria-hidden":"true"}},[t._v("#")]),t._v(" Register a GitLab Runner")]),s("p",[s("a",{attrs:{href:"https://docs.gitlab.com/runner/register/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Registering Runners")])]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# docker exec <container> command: 在指定的 docker 容器中执行命令")]),t._v("\ndocker "),s("span",{attrs:{class:"token function"}},[t._v("exec")]),t._v(" -it gitlab-runner gitlab-runner register \\\n  --non-interactive \\\n  --url "),s("span",{attrs:{class:"token string"}},[t._v('"https://xxx.com"')]),t._v(" \\\n  --registration-token "),s("span",{attrs:{class:"token string"}},[t._v('"xxx"')]),t._v(" \\\n  --executor "),s("span",{attrs:{class:"token string"}},[t._v('"docker"')]),t._v(" \\\n  --docker-image "),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("image"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("tag"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \\\n  --description "),s("span",{attrs:{class:"token string"}},[t._v('"xxx"')]),t._v(" \\\n  --tag-list "),s("span",{attrs:{class:"token string"}},[t._v('"xxx,xxx"')]),t._v(" \\\n  --docker-pull-policy "),s("span",{attrs:{class:"token string"}},[t._v('"if-not-present"')]),t._v(" \\\n  --run-untagged \\\n  --locked"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"false"')]),t._v("\n")])]),s("h2",{attrs:{id:"gitlab-ci-yml-文件配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci-yml-文件配置","aria-hidden":"true"}},[t._v("#")]),t._v(" .gitlab-ci.yml 文件配置")]),s("p",[s("a",{attrs:{href:"https://docs.gitlab.com/ee/ci/yaml/README.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuration of your jobs with .gitlab-ci.yml")])]),s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{attrs:{class:"token key atrule"}},[t._v("image")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <image"),s("span",{attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("<tag"),s("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# gitlab runner 使用 docker executor 时需要指定 docker 镜像")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("services")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 使用上面的 docker 镜像时额外需要关联的 service docker 镜像，通常为 mysql 等数据库镜像")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" <image"),s("span",{attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("<tag"),s("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("variables")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# Job 中需要用到的变量，通过添加 $ 来引用，如 $VARIABLE_NAME，也可以在每个 Job 中单独定义")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token key atrule"}},[t._v("VARIABLE_NAME")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v('"xxx"')]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("cache")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 设置缓存，可以在每个 Job 中单独定义")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("untracked")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token boolean important"}},[t._v("true ")]),s("span",{attrs:{class:"token comment"}},[t._v("# 是否缓存 Git 仓库中所有未跟踪的文件")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("key")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <string"),s("span",{attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 在每个 Job 中单独定义时可能会用到，防止当前 Job 的缓存被其他 Job 的缓存覆盖")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 需要缓存的目录路径")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules/\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("policy")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pull"),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v("push "),s("span",{attrs:{class:"token comment"}},[t._v("# 缓存策略，默认为 pull-push，可修改为 pull 或 push")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("stages")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 构建阶段")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("before_script")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 全局脚本，在所有 Jobs 执行之前执行")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" global before script\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("after_script")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 全局脚本，在所有 Jobs 执行之后执行")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" global after script\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("pages")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 一个特殊的 Job，上传静态内容生成静态网站(Gitlab Pages)")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy "),s("span",{attrs:{class:"token comment"}},[t._v("# 在哪个阶段执行，默认为 test")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 只包含哪些分支")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 按先后顺序依次执行")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" my command\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("artifacts")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 必须包含一个 public 目录，用来存放静态内容")]),t._v("\n    "),s("span",{attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" public "),s("span",{attrs:{class:"token comment"}},[t._v("# 必须")]),t._v("\n      "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token key atrule"}},[t._v("job")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("stage")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build "),s("span",{attrs:{class:"token comment"}},[t._v("# 在哪个阶段执行，默认为 test")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("only")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 只包含哪些分支")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" develop\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("when")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" manual "),s("span",{attrs:{class:"token comment"}},[t._v("# 何时执行，manual 表示手动触发，默认为 on_success")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("before_script")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 替换全局的 before_script")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" execute this instead of global before script\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 按先后顺序依次执行")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" my command\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n  "),s("span",{attrs:{class:"token key atrule"}},[t._v("after_script")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("# 替换全局的 after_script")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" execute this instead of global after script\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])])}],!1,null,null,null);a.default=e.exports}}]);